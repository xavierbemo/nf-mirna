/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    // Preparing miRNA references
    withName: 'PREPARE_MIRNA:CLEAN_MATURE' {
        ext.args = { "if (\$name ~ /^${params.mirtrace_species}/) print \">\"\$name\"\\n\"\$seq}'" }
    }
    
    // miRTRace
    withName: 'MIRTRACE_QC' {
        publishDir = [
            path: { "${params.outdir}/mirtrace/${meta.id}" }, 
            mode: 'copy', 
            overwrite: true
        ]
    }

    // Mature miRNA aligment
    withName: 'MATURE_ALIGNMENT:BOWTIE_ALIGN' {
        ext.args = [
            "-t",
            "-k 50", 
            "-n 0",
            "--norc",
            "--best",
            "--strata",
            "--chunkmbs 2048"
        ].join(" ").trim()
        ext.args2 = { "--un ${meta.id}_unaligned.fa" }
        publishDir = [
            path: { "${params.outdir}/bowtie/mature/${meta.id}" }, 
            mode: 'copy', 
            overwrite: true,
            enabled: params.save_intermediates
        ]
    }
    withName: 'MATURE_ALIGNMENT:SAMTOOLS_STATS' {
        publishDir = [
            path: { "${params.outdir}/bowtie/mature/${meta.id}" },
            mode: 'copy',
            overwrite: true
        ]
    }
    withName: 'MATURE_ALIGNMENT:SAMTOOLS_FLAGSTATS' {
        publishDir = [
            path: { "${params.outdir}/bowtie/mature/${meta.id}" },
            mode: 'copy',
            overwrite: true
        ]
    }
    
    // Unmapped reads alignment to genome
    if ( !params.skip_genome ) {
        withName: 'GENOME_ALIGNMENT:BOWTIE_ALIGN' {
            ext.args = [
                "-t",
                "-k 50", 
                "-n 1",
                "--norc",
                "--best",
                "--strata",
                "--chunkmbs 2048"
            ].join(" ").trim()
            ext.args3 = { "mv *bam ${meta.id}_genome.bam && mv *out ${meta.id}_genome.out" }
            publishDir = [
                path: { "${params.outdir}/bowtie/genome/${meta.id}" }, 
                mode: 'copy', 
                overwrite: true,
                enabled: params.save_intermediates
            ]
        }
        withName: 'GENOME_ALIGNMENT:SAMTOOLS_STATS' {
            ext.args = { "mv *.stats ${meta.id}_genome.stats" }
            publishDir = [
                path: { "${params.outdir}/bowtie/genome/${meta.id}" },
                mode: 'copy',
                overwrite: true
            ]
        }
        withName: 'GENOME_ALIGNMENT:SAMTOOLS_FLAGSTATS' {
            ext.args = { "mv *.flagstats ${meta.id}_genome.flagstats" }
            publishDir = [
                path: { "${params.outdir}/bowtie/genome/${meta.id}" },
                mode: 'copy',
                overwrite: true
            ]
        }
    }

    // miRDeep2 novel miRNA discovery
    if ( !params.skip_mirdeep ) {
        
        withName: 'NOVEL_MIRNA:CLEAN_HAIRPIN' {
            ext.args = { "if (\$name ~ /^${params.mirtrace_species}/) print \">\"\$name\"\\n\"\$seq}'" }
        }
        withName: 'NOVEL_MIRNA:MIRDEEP2_MAPPER' {
            publishDir = [
                path: { "${params.outdir}/mirdeep2/${meta.id}" }, 
                mode: 'copy', 
                overwrite: true,
                enabled: params.save_intermediates
            ]
            singularity.runOptions = "--bind ${projectDir}/assets/Rfam_index:/usr/local/bin/indexes"
            docker.runOptions = "-u \$(id -u):\$(id -g) -v ${projectDir}/assets/Rfam_index:/usr/local/bin/indexes"
        }
    }
}