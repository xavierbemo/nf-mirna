/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-mirna Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input               = null

    // Alignment options
    mature              = 'https://www.mirbase.org/download/mature.fa'
    hairpin             = 'https://www.mirbase.org/download/hairpin.fa'
    mirna_gtf           = null
    genome_index        = null
    genome              = null

    // miRTrace options
    mirtrace_species    = 'hsa'
    mirtrace_protocol   = null
    three_prime_adapter = null
    mirtrace_title      = null
    mirtrace_comment    = null

    // miRDeep2 options
    mirdeep_mirna_other  = null
    mirdeep_randfold     = true
    mirdeep_mirbase_v18  = true
    mirdeep_pdfs         = false

    // Boilerplate options
    outdir              = 'results'
    save_intermediates  = false

    // Skipping pipeline steps options
    skip_fastqc         = false
    skip_genome         = false
    skip_mirdeep        = false
    skip_multiqc        = false

    // Config options
    config_profile_name         = null
    config_profile_description  = null
    config_profile_contact      = null

    validate_params             = true
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Custom profiles
profiles {
    
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    illumina        { includeConfig 'conf/protocol_illumina.config' }
    nextflex        { includeConfig 'conf/protocol_nextflex.config' }
    test            { includeConfig 'conf/test.config' }
    test_genome     { includeConfig 'conf/test_genome.config' }
    clinic          { includeConfig 'conf/clinic.config' }
    local           { includeConfig 'conf/local.config' }
    MN5             { includeConfig 'conf/mn5_cluster.config' }
}
docker.registry       = 'quay.io'
singularity.registry  = 'quay.io'

// Set bash options
process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

def trace_timestamp = new java.util.Date().format( 'dd-MM-yyyy_HH-mm')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    overwrite = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-mirna'
    author          = """X. Benedicto"""
    homePage        = 'https://github.com/xavierbemo/nf-mirna'
    description     = """Small RNA-Seq Best Practice Analysis Pipeline."""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.2'
    version         = '0.2'
    doi             = null
}

validation {
    help {
        enabled = true
        strict  = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-

   \033[38;2;14;227;184m▄▄▄▄  ▗▞▀▀▘\033[0m  \033[0;35m▄▄▄▄  ▄ ▗▄▄▖ ▗▖  ▗▖ ▗▄▖ \033[0m
   \033[38;2;14;227;184m█   █ ▐▌   \033[0m  \033[0;35m█ █ █ ▄ ▐▌ ▐▌▐▛▚▖▐▌▐▌ ▐▌\033[0m
   \033[38;2;14;227;184m█   █ ▐▛▀▘ \033[0m  \033[0;35m█   █ █ ▐▛▀▚▖▐▌ ▝▜▌▐▛▀▜▌\033[0m
   \033[38;2;14;227;184m      ▐▌   \033[0m  \033[0;35m        ▐▌ ▐▌▐▌  ▐▌▐▌ ▐▌\033[0m

\033[0;35m   ${manifest.name} ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-\n
"""
    }
    summary { beforeText = validation.help.beforeText }
}

// Load modules config
includeConfig 'conf/modules.config'